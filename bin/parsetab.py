
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.2'

_lr_method = 'LALR'

_lr_signature = 'I\xd1\xe4o\xa7\x8c3\xa2\xb3e\xcf\xe2<+\x9f\xd3'
    
_lr_action_items = {'STAR':([55,],[76,]),'TEXT':([48,59,80,],[58,58,95,]),'EQUAL':([39,64,84,],[51,-28,-27,]),'EQUATIONS_SPECIFICATION':([0,2,4,6,7,8,10,11,12,13,19,22,32,35,36,37,42,44,49,50,81,96,],[1,-33,-19,-34,-8,-32,-31,-35,-1,1,-4,-20,-13,-5,-9,-7,-41,-10,-14,-6,-15,-16,]),'SQ_LPARAN':([6,32,49,54,69,86,],[18,48,59,74,-51,-52,]),'COLON':([90,],[101,]),'FUNCTIONS_SPECIFICATION':([0,2,4,6,7,8,10,11,12,13,19,22,32,35,36,37,42,44,49,50,81,96,],[3,-33,-19,-34,-8,-32,-31,-35,-1,3,-4,-20,-13,-5,-9,-7,-41,-10,-14,-6,-15,-16,]),'FUN':([15,26,27,41,72,88,92,102,],[28,-44,28,-45,-46,-47,-48,-49,]),'COMMENT':([71,],[87,]),'SEMICOLON':([54,60,61,62,69,73,75,86,93,94,98,99,],[72,83,-37,-36,-51,88,92,-52,102,103,-50,-53,]),'RPARAN':([2,6,7,8,9,10,11,17,19,20,32,33,35,36,47,49,50,52,53,61,63,64,65,66,67,68,70,76,77,78,79,81,84,87,96,97,],[-33,-34,-8,-32,19,-31,-35,32,-4,35,-13,49,-5,-9,-23,-14,-6,64,69,-37,84,-28,-43,-39,-42,-36,86,-29,94,-30,-24,-15,-27,98,-16,-40,]),'BLOCK_OPEN':([1,3,5,],[14,15,16,]),'CHANNELS_SPECIFICATION':([0,2,4,6,7,8,10,11,12,13,19,22,32,35,36,37,42,44,49,50,81,96,],[5,-33,-19,-34,-8,-32,-31,-35,-1,5,-4,-20,-13,-5,-9,-7,-41,-10,-14,-6,-15,-16,]),'COMMA':([2,6,7,8,10,11,12,19,20,32,33,35,36,46,47,49,50,57,58,61,63,64,65,66,67,68,70,79,81,82,84,95,96,97,104,],[-33,-34,-8,-32,-31,-35,21,-4,21,-13,21,-5,-9,56,-23,-14,-6,80,-25,-37,85,-28,-43,-39,-42,-36,56,-24,-15,80,-27,-26,-16,-40,56,]),'INTEGER':([18,55,],[34,78,]),'IDENTIFIER':([0,2,4,6,7,8,9,10,11,12,13,17,19,21,22,25,28,31,32,35,36,37,42,44,47,49,50,51,52,53,56,74,79,81,85,89,91,96,100,101,104,],[6,-33,-19,-34,-8,-32,6,-31,-35,-1,6,6,-4,6,-20,40,43,47,-13,-5,-9,-7,-41,-10,-23,-14,-6,62,68,47,79,90,-24,-15,68,90,-54,-16,-55,47,-56,]),'$end':([2,4,6,7,8,10,11,12,13,19,22,32,35,36,37,42,44,49,50,81,96,],[-33,-19,-34,-8,-32,-31,-35,-1,0,-4,-20,-13,-5,-9,-7,-41,-10,-14,-6,-15,-16,]),'BLOCK_CLOSE':([23,24,26,27,29,30,38,41,45,72,83,88,92,102,103,],[37,-11,-44,42,-17,44,-12,-45,-18,-46,-21,-47,-48,-49,-22,]),'SQ_RPARAN':([34,47,57,58,79,82,89,91,95,100,104,],[50,-23,81,-25,-24,96,99,-54,-26,-55,-56,]),'CHANNEL':([16,29,30,45,103,],[31,-17,31,-18,-22,]),'LPARAN':([0,2,4,6,7,8,9,10,11,12,13,17,19,21,22,32,35,36,37,40,42,43,44,46,47,49,50,54,68,69,75,79,81,86,96,99,],[9,-33,-19,17,-8,-32,9,-31,-35,-1,9,9,-4,9,-20,-13,-5,-9,-7,52,-41,53,-10,55,-23,-14,-6,71,52,-51,71,-24,-15,-52,-16,-53,]),'EQUATION':([14,23,24,38,83,],[25,25,-11,-12,-21,]),'BOOL':([0,2,4,6,7,8,9,10,11,12,13,17,19,21,22,32,35,36,37,42,44,49,50,51,52,81,85,96,],[11,-33,-19,-34,-8,-32,11,-31,-35,-1,11,11,-4,11,-20,-13,-5,-9,-7,-41,-10,-14,-6,61,61,-15,61,-16,]),}

_lr_action = { }
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = { }
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'expression_function_qop_arguments':([48,59,],[57,82,]),'functions_list':([15,],[27,]),'expression_tuple':([0,9,13,17,21,],[2,2,2,2,2,]),'equation_function_arguments':([52,],[63,]),'specification':([0,13,],[4,22,]),'function_qop_param':([74,89,],[91,100,]),'function_qopml_params_list':([74,],[89,]),'channel':([16,30,],[29,45,]),'function':([15,27,],[26,41,]),'equations_list':([14,],[23,]),'equation_simple_expression':([51,52,85,],[60,65,65,]),'channel_buffor':([55,],[77,]),'identifiers_list':([31,53,101,],[46,70,104,]),'model':([0,],[13,]),'expression_simple':([0,9,13,17,21,],[7,7,7,7,36,]),'expression_tuple_element':([0,9,13,17,21,],[8,8,8,8,8,]),'expression_call_function':([0,9,13,17,21,],[10,10,10,10,10,]),'function_comment':([54,75,],[73,93,]),'equation_expression':([52,85,],[66,97,]),'channels_list':([16,],[30,]),'expression_function_arguments':([0,9,13,17,],[12,20,12,33,]),'function_qopml_params':([54,],[75,]),'equation_complex_expression':([25,52,85,],[39,67,67,]),'equation':([14,23,],[24,38,]),'function_params':([43,],[54,]),}

_lr_goto = { }
for _k, _v in _lr_goto_items.items():
   for _x,_y in zip(_v[0],_v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = { }
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> model","S'",1,None,None,None),
  ('specification -> expression_function_arguments','specification',1,'p_expression_test','/home/damian/workspaces/python/qopmlinterpreter/qopml/interpreter/model/parser/lex_yacc/grammar/expressions.py',38),
  ('expression_conditional -> expression_comaprison','expression_conditional',1,'p_expression_conditional','/home/damian/workspaces/python/qopmlinterpreter/qopml/interpreter/model/parser/lex_yacc/grammar/expressions.py',44),
  ('expression_conditional -> BOOL','expression_conditional',1,'p_expression_conditional','/home/damian/workspaces/python/qopmlinterpreter/qopml/interpreter/model/parser/lex_yacc/grammar/expressions.py',45),
  ('expression_tuple -> LPARAN RPARAN','expression_tuple',2,'p_expression_tuple','/home/damian/workspaces/python/qopmlinterpreter/qopml/interpreter/model/parser/lex_yacc/grammar/expressions.py',51),
  ('expression_tuple -> LPARAN expression_function_arguments RPARAN','expression_tuple',3,'p_expression_tuple','/home/damian/workspaces/python/qopmlinterpreter/qopml/interpreter/model/parser/lex_yacc/grammar/expressions.py',52),
  ('expression_tuple_element -> IDENTIFIER SQ_LPARAN INTEGER SQ_RPARAN','expression_tuple_element',4,'p_expression_tuple_element','/home/damian/workspaces/python/qopmlinterpreter/qopml/interpreter/model/parser/lex_yacc/grammar/expressions.py',58),
  ('specification -> EQUATIONS_SPECIFICATION BLOCK_OPEN equations_list BLOCK_CLOSE','specification',4,'p_equations_specification','/home/damian/workspaces/python/qopmlinterpreter/qopml/interpreter/model/parser/lex_yacc/grammar/equations.py',63),
  ('expression_function_arguments -> expression_simple','expression_function_arguments',1,'p_expression_function_arguments','/home/damian/workspaces/python/qopmlinterpreter/qopml/interpreter/model/parser/lex_yacc/grammar/expressions.py',64),
  ('expression_function_arguments -> expression_function_arguments COMMA expression_simple','expression_function_arguments',3,'p_expression_function_arguments','/home/damian/workspaces/python/qopmlinterpreter/qopml/interpreter/model/parser/lex_yacc/grammar/expressions.py',65),
  ('specification -> CHANNELS_SPECIFICATION BLOCK_OPEN channels_list BLOCK_CLOSE','specification',4,'p_channels_specification','/home/damian/workspaces/python/qopmlinterpreter/qopml/interpreter/model/parser/lex_yacc/grammar/channels.py',65),
  ('equations_list -> equation','equations_list',1,'p_equations_list','/home/damian/workspaces/python/qopmlinterpreter/qopml/interpreter/model/parser/lex_yacc/grammar/equations.py',70),
  ('equations_list -> equations_list equation','equations_list',2,'p_equations_list','/home/damian/workspaces/python/qopmlinterpreter/qopml/interpreter/model/parser/lex_yacc/grammar/equations.py',71),
  ('expression_call_function -> IDENTIFIER LPARAN RPARAN','expression_call_function',3,'p_expression_call_function','/home/damian/workspaces/python/qopmlinterpreter/qopml/interpreter/model/parser/lex_yacc/grammar/expressions.py',71),
  ('expression_call_function -> IDENTIFIER LPARAN expression_function_arguments RPARAN','expression_call_function',4,'p_expression_call_function','/home/damian/workspaces/python/qopmlinterpreter/qopml/interpreter/model/parser/lex_yacc/grammar/expressions.py',72),
  ('expression_call_function -> IDENTIFIER LPARAN RPARAN SQ_LPARAN expression_function_qop_arguments SQ_RPARAN','expression_call_function',6,'p_expression_call_function','/home/damian/workspaces/python/qopmlinterpreter/qopml/interpreter/model/parser/lex_yacc/grammar/expressions.py',73),
  ('expression_call_function -> IDENTIFIER LPARAN expression_function_arguments RPARAN SQ_LPARAN expression_function_qop_arguments SQ_RPARAN','expression_call_function',7,'p_expression_call_function','/home/damian/workspaces/python/qopmlinterpreter/qopml/interpreter/model/parser/lex_yacc/grammar/expressions.py',74),
  ('channels_list -> channel','channels_list',1,'p_channels_list','/home/damian/workspaces/python/qopmlinterpreter/qopml/interpreter/model/parser/lex_yacc/grammar/channels.py',72),
  ('channels_list -> channels_list channel','channels_list',2,'p_channels_list','/home/damian/workspaces/python/qopmlinterpreter/qopml/interpreter/model/parser/lex_yacc/grammar/channels.py',73),
  ('model -> specification','model',1,'p_rule_model','/home/damian/workspaces/python/qopmlinterpreter/qopml/interpreter/model/parser/lex_yacc/grammar/main.py',72),
  ('model -> model specification','model',2,'p_rule_model','/home/damian/workspaces/python/qopmlinterpreter/qopml/interpreter/model/parser/lex_yacc/grammar/main.py',73),
  ('equation -> EQUATION equation_complex_expression EQUAL equation_simple_expression SEMICOLON','equation',5,'p_equation','/home/damian/workspaces/python/qopmlinterpreter/qopml/interpreter/model/parser/lex_yacc/grammar/equations.py',77),
  ('channel -> CHANNEL identifiers_list LPARAN channel_buffor RPARAN SEMICOLON','channel',6,'p_channel','/home/damian/workspaces/python/qopmlinterpreter/qopml/interpreter/model/parser/lex_yacc/grammar/channels.py',79),
  ('identifiers_list -> IDENTIFIER','identifiers_list',1,'p_rule_identifiers_list','/home/damian/workspaces/python/qopmlinterpreter/qopml/interpreter/model/parser/lex_yacc/grammar/main.py',79),
  ('identifiers_list -> identifiers_list COMMA IDENTIFIER','identifiers_list',3,'p_rule_identifiers_list','/home/damian/workspaces/python/qopmlinterpreter/qopml/interpreter/model/parser/lex_yacc/grammar/main.py',80),
  ('expression_function_qop_arguments -> TEXT','expression_function_qop_arguments',1,'p_expression_function_qop_arguments','/home/damian/workspaces/python/qopmlinterpreter/qopml/interpreter/model/parser/lex_yacc/grammar/expressions.py',80),
  ('expression_function_qop_arguments -> expression_function_qop_arguments COMMA TEXT','expression_function_qop_arguments',3,'p_expression_function_qop_arguments','/home/damian/workspaces/python/qopmlinterpreter/qopml/interpreter/model/parser/lex_yacc/grammar/expressions.py',81),
  ('equation_complex_expression -> IDENTIFIER LPARAN equation_function_arguments RPARAN','equation_complex_expression',4,'p_equation_complex_expression','/home/damian/workspaces/python/qopmlinterpreter/qopml/interpreter/model/parser/lex_yacc/grammar/equations.py',83),
  ('equation_complex_expression -> IDENTIFIER LPARAN RPARAN','equation_complex_expression',3,'p_equation_complex_expression','/home/damian/workspaces/python/qopmlinterpreter/qopml/interpreter/model/parser/lex_yacc/grammar/equations.py',84),
  ('channel_buffor -> STAR','channel_buffor',1,'p_channel_buffor','/home/damian/workspaces/python/qopmlinterpreter/qopml/interpreter/model/parser/lex_yacc/grammar/channels.py',86),
  ('channel_buffor -> INTEGER','channel_buffor',1,'p_channel_buffor','/home/damian/workspaces/python/qopmlinterpreter/qopml/interpreter/model/parser/lex_yacc/grammar/channels.py',87),
  ('expression_simple -> expression_call_function','expression_simple',1,'p_expression_simple','/home/damian/workspaces/python/qopmlinterpreter/qopml/interpreter/model/parser/lex_yacc/grammar/expressions.py',87),
  ('expression_simple -> expression_tuple_element','expression_simple',1,'p_expression_simple','/home/damian/workspaces/python/qopmlinterpreter/qopml/interpreter/model/parser/lex_yacc/grammar/expressions.py',88),
  ('expression_simple -> expression_tuple','expression_simple',1,'p_expression_simple','/home/damian/workspaces/python/qopmlinterpreter/qopml/interpreter/model/parser/lex_yacc/grammar/expressions.py',89),
  ('expression_simple -> IDENTIFIER','expression_simple',1,'p_expression_simple','/home/damian/workspaces/python/qopmlinterpreter/qopml/interpreter/model/parser/lex_yacc/grammar/expressions.py',90),
  ('expression_simple -> BOOL','expression_simple',1,'p_expression_simple','/home/damian/workspaces/python/qopmlinterpreter/qopml/interpreter/model/parser/lex_yacc/grammar/expressions.py',91),
  ('equation_simple_expression -> IDENTIFIER','equation_simple_expression',1,'p_equation_simple_expression','/home/damian/workspaces/python/qopmlinterpreter/qopml/interpreter/model/parser/lex_yacc/grammar/equations.py',90),
  ('equation_simple_expression -> BOOL','equation_simple_expression',1,'p_equation_simple_expression','/home/damian/workspaces/python/qopmlinterpreter/qopml/interpreter/model/parser/lex_yacc/grammar/equations.py',91),
  ('expression_comaprison -> expression_simple EQUAL EQUAL expression_simple','expression_comaprison',4,'p_expression_comaprison','/home/damian/workspaces/python/qopmlinterpreter/qopml/interpreter/model/parser/lex_yacc/grammar/expressions.py',97),
  ('equation_function_arguments -> equation_expression','equation_function_arguments',1,'p_equation_function_arguments','/home/damian/workspaces/python/qopmlinterpreter/qopml/interpreter/model/parser/lex_yacc/grammar/equations.py',100),
  ('equation_function_arguments -> equation_function_arguments COMMA equation_expression','equation_function_arguments',3,'p_equation_function_arguments','/home/damian/workspaces/python/qopmlinterpreter/qopml/interpreter/model/parser/lex_yacc/grammar/equations.py',101),
  ('specification -> FUNCTIONS_SPECIFICATION BLOCK_OPEN functions_list BLOCK_CLOSE','specification',4,'p_functions_specification','/home/damian/workspaces/python/qopmlinterpreter/qopml/interpreter/model/parser/lex_yacc/grammar/functions.py',106),
  ('equation_expression -> equation_complex_expression','equation_expression',1,'p_equation_expression','/home/damian/workspaces/python/qopmlinterpreter/qopml/interpreter/model/parser/lex_yacc/grammar/equations.py',111),
  ('equation_expression -> equation_simple_expression','equation_expression',1,'p_equation_expression','/home/damian/workspaces/python/qopmlinterpreter/qopml/interpreter/model/parser/lex_yacc/grammar/equations.py',112),
  ('functions_list -> function','functions_list',1,'p_functions_list','/home/damian/workspaces/python/qopmlinterpreter/qopml/interpreter/model/parser/lex_yacc/grammar/functions.py',113),
  ('functions_list -> functions_list function','functions_list',2,'p_functions_list','/home/damian/workspaces/python/qopmlinterpreter/qopml/interpreter/model/parser/lex_yacc/grammar/functions.py',114),
  ('function -> FUN IDENTIFIER function_params SEMICOLON','function',4,'p_function','/home/damian/workspaces/python/qopmlinterpreter/qopml/interpreter/model/parser/lex_yacc/grammar/functions.py',120),
  ('function -> FUN IDENTIFIER function_params function_comment SEMICOLON','function',5,'p_function','/home/damian/workspaces/python/qopmlinterpreter/qopml/interpreter/model/parser/lex_yacc/grammar/functions.py',121),
  ('function -> FUN IDENTIFIER function_params function_qopml_params SEMICOLON','function',5,'p_function','/home/damian/workspaces/python/qopmlinterpreter/qopml/interpreter/model/parser/lex_yacc/grammar/functions.py',122),
  ('function -> FUN IDENTIFIER function_params function_qopml_params function_comment SEMICOLON','function',6,'p_function','/home/damian/workspaces/python/qopmlinterpreter/qopml/interpreter/model/parser/lex_yacc/grammar/functions.py',123),
  ('function_comment -> LPARAN COMMENT RPARAN','function_comment',3,'p_function_comment','/home/damian/workspaces/python/qopmlinterpreter/qopml/interpreter/model/parser/lex_yacc/grammar/functions.py',129),
  ('function_params -> LPARAN RPARAN','function_params',2,'p_function_params','/home/damian/workspaces/python/qopmlinterpreter/qopml/interpreter/model/parser/lex_yacc/grammar/functions.py',135),
  ('function_params -> LPARAN identifiers_list RPARAN','function_params',3,'p_function_params','/home/damian/workspaces/python/qopmlinterpreter/qopml/interpreter/model/parser/lex_yacc/grammar/functions.py',136),
  ('function_qopml_params -> SQ_LPARAN function_qopml_params_list SQ_RPARAN','function_qopml_params',3,'p_function_qopml_params','/home/damian/workspaces/python/qopmlinterpreter/qopml/interpreter/model/parser/lex_yacc/grammar/functions.py',146),
  ('function_qopml_params_list -> function_qop_param','function_qopml_params_list',1,'p_function_qopml_params_list','/home/damian/workspaces/python/qopmlinterpreter/qopml/interpreter/model/parser/lex_yacc/grammar/functions.py',152),
  ('function_qopml_params_list -> function_qopml_params_list function_qop_param','function_qopml_params_list',2,'p_function_qopml_params_list','/home/damian/workspaces/python/qopmlinterpreter/qopml/interpreter/model/parser/lex_yacc/grammar/functions.py',153),
  ('function_qop_param -> IDENTIFIER COLON identifiers_list','function_qop_param',3,'p_function_qop_param','/home/damian/workspaces/python/qopmlinterpreter/qopml/interpreter/model/parser/lex_yacc/grammar/functions.py',163),
]
